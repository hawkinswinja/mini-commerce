name: Scan, Lint, and Test

on:
  pull_request:
  push:
  workflow_dispatch:

jobs:
  scan_and_lint:
    name: Scan & Lint files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install flake8 bandit

      - name: Run Linter (Flake8)
        working-directory: backend
        run: |
          flake8 --exit-zero .

      - name: Run Security Scan (Bandit)
        working-directory: backend
        run: |
          bandit -r --exit-zero .

      - name: Install dependencies and run linter for frontend
        working-directory: frontend
        run: |
          npm install
          npm run lint

      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./frontend/Dockerfile

      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ./backend/Dockerfile
          

  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: set up docker and docker compose
        uses: docker/setup-buildx-action@v1

      - name: generate env file
        env:
          SECRET_ENV_FILE: ${{ secrets.ENV_FILE }}
        run: |
          echo $SECRET_ENV_FILE | base64 -d > .env
          cat .env

      - name: Run tests and generate coverage report
        run: |
          docker compose -f docker-compose-test.yaml run --rm backend coverage run manage.py test
          docker compose -f docker-compose-test.yaml run --rm backend coverage report
          docker compose -f docker-compose-test.yaml down
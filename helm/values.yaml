# Default values for ..
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# Duplicate this file to use it as a base for your own values.yaml file.
frontend:
  #This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicaCount: 1

  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    repository: hawkinswinja/m-commerce-frontend
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "7753bb1"
  service:
    port: 80
    type: ClusterIP
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  livenessProbe:
    httpGet:
      path: /
      port: http
    periodSeconds: 5
  readinessProbe:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 15
    periodSeconds: 5
  
    
backend:
  #This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicaCount: 1

  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    repository: hawkinswinja/m-commerce-backend
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v2"

    # This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    imagePullSecrets: []
  service:
    port: 8000
    type: ClusterIP
  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 500m
      memory: 300Mi
  livenessProbe:
    httpGet:
      path: /user/isauthenticated/
      port: http
      httpHeaders:
      - name: Host
        value: localhost
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /user/isauthenticated/
      port: http
      httpHeaders:
      - name: Host
        value: localhost
    initialDelaySeconds: 60
  database:
    POSTGRES_USER: "postgres"
    POSTGRES_PASSWORD: "password"
    POSTGRES_DB: "postgres"
    POSTGRES_HOST: "" # This is an external host of the postgres database. Leave blank if you are using the postgresql chart.
  env:
    - name: DEBUG
      value: "True"
    - name: SECRET_KEY
      value: ""
    - name: ALLOWED_HOSTS
      value: localhost
    - name: LOGIN_REDIRECT_URL
      value: /
    - name: AT_USERNAME
      value: sandbox
    - name: AT_APIKEY
      value: ""
    - name: OIDC_RP_CLIENT_ID
      value: ""
    - name: OIDC_RP_CLIENT_SECRET
      value: ""
    - name: OIDC_OP_AUTHORIZATION_ENDPOINT
      value: https://accounts.google.com/o/oauth2/auth
    - name: OIDC_OP_TOKEN_ENDPOINT
      value: https://oauth2.googleapis.com/token
    - name: OIDC_OP_USER_ENDPOINT
      value: https://openidconnect.googleapis.com/v1/userinfo
    - name: OIDC_OP_JWKS_ENDPOINT
      value: https://www.googleapis.com/oauth2/v3/certs
    - name: CORS_ALLOWED_ORIGINS
      value: "http://localhost"
    

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""


postgresql:
  enabled: false
  auth:
    username: postgres
    password: password
    database: postgres
  primary:
    persistence:
      enabled: true
      size: 1Gi
      storageClass: ""
    
#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
# securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: ""
  annotations:
    # nginx.ingress.kubernetes.io/use-regex: "true"
    # nginx.ingress.kubernetes.io/rewrite-target: /$2
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: localhost
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: frontend-svc
              port: 80

        - path: /oidc
          pathType: Prefix
          backend:
            service:
              name: backend-svc
              port: 8000   
          
  tls: []
 


#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
